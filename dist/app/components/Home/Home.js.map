{"version":3,"sources":["../../../../src/app/components/Home/Home.js"],"names":["Home","props","show","setShow","history","action","response","replace","location","state","direct","HomePage","TweetInput","inputClass","setInputClass","buttonClass","setButtonClass","inputRef","handleFocus","event","handleBlur","handleClick","text","current","value","status","console","log","handleChange","target","userProfile","addPhotoLogo","gifLogo","inquestLogo","emoticonLogo","TweetExtras","src","TweetListBox"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport './Home.css'\r\nimport { isAuthenticated } from '../../services/apiServices'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ChargePage from '../ChargePage'\r\nimport MainNavbar from '../MainNavbar'\r\nimport userProfile from '../../assets/profile-user.svg'\r\nimport addPhotoLogo from '../../assets/logos/add_photo_logo.svg'\r\nimport emoticonLogo from '../../assets/logos/emoticon_logo.svg'\r\nimport inquestLogo from '../../assets/logos/inquest_logo.svg'\r\nimport gifLogo from '../../assets/logos/gif_logo.svg'\r\nimport { postTweet } from '../../services/apiServices'\r\n\r\nconst Home = (props) => {\r\n\r\n    /*States*/\r\n    const [show, setShow] = useState(false)\r\n\r\n    /*History*/\r\n    const history = useHistory()\r\n\r\n    /*Effect*/\r\n    useEffect(() => {\r\n\r\n        const action = async () => {\r\n            const response = await isAuthenticated()\r\n            if (!response) {\r\n                history.replace('/login')\r\n            } else {\r\n                setShow(true)\r\n            }\r\n        }\r\n        action()\r\n\r\n\r\n    }, [])\r\n    if (props.location.state && props.location.state.direct) {\r\n        return (\r\n            <HomePage />\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                {show\r\n                    ? <HomePage />\r\n                    : <ChargePage />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <div className='home_container'>\r\n            <MainNavbar itemSelect='Inicio' />\r\n            <div className=\"home_content_box\">\r\n                <div className=\"home_content_start\">\r\n                    <strong>Inicio</strong>\r\n                </div>\r\n                <TweetInput />\r\n                <TweetListBox />\r\n            </div>\r\n            <div className=\"home_search_extra\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TweetInput = () => {\r\n    const [inputClass, setInputClass] = useState('tweet_input')\r\n    const [buttonClass, setButtonClass] = useState('tweet_input_button_button')\r\n    const inputRef = useRef()\r\n\r\n    const handleFocus = (event) => {\r\n        setInputClass('tweet_input input_focus')\r\n    }\r\n\r\n    const handleBlur = (event) => {\r\n        setInputClass('tweet_input')\r\n    }\r\n\r\n    const handleClick = async (event) => {\r\n        const text = inputRef.current.value\r\n        if (text) {\r\n            try {\r\n                const response = await postTweet(text)\r\n                if (response.status === 200) {\r\n                    console.log('Tweet Creado')\r\n                    inputRef.current.value = ''\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.value) {\r\n            setButtonClass('tweet_input_button_button active')\r\n        } else {\r\n            setButtonClass('tweet_input_button_button')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='tweet_input_container'>\r\n            <div className=\"tweet_input_profile\"><img src={userProfile} /></div>\r\n            <div className=\"tweet_input_input\"><input ref={inputRef} onChange={(event) => { handleChange(event) }} onBlur={(event) => { handleBlur(event) }} onFocus={(event) => { handleFocus(event) }} className={inputClass} placeholder='¿Qué está pasando?' type='text' /></div>\r\n            <div className=\"tweet_input_extras\">\r\n                <TweetExtras src={addPhotoLogo} />\r\n                <TweetExtras src={gifLogo} />\r\n                <TweetExtras src={inquestLogo} />\r\n                <TweetExtras src={emoticonLogo} />\r\n            </div>\r\n            <div className='tweet_input_button' onClick={(event) => { handleClick(event) }}><div className={buttonClass}>Twittear</div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TweetExtras = ({ src }) => {\r\n\r\n    return (\r\n        <div className='tweet_extra_container'>\r\n            <img className='tweet_extra_icon' src={src} />\r\n        </div>\r\n    )\r\n}\r\nconst TweetListBox = () => {\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;"],"file":"Home.js"}