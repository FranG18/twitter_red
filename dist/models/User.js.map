{"version":3,"sources":["../../src/models/User.js"],"names":["Schema","mongoose","userSchema","name","String","userName","email","password","followers","Array","following","tweets","retweets","liked","userPhoto","timestamps","pre","next","usuario","isModified","bcrypt","genSalt","err","salt","hash","methods","compararPassword","cb","compare","isTrue","model"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAACC,qBAASD,MAAtB;AAEA,IAAME,UAAU,GAAC,IAAIF,MAAJ,CAAW;AACxBG,EAAAA,IAAI,EAACC,MADmB;AAExBC,EAAAA,QAAQ,EAACD,MAFe;AAGxBE,EAAAA,KAAK,EAACF,MAHkB;AAIxBG,EAAAA,QAAQ,EAACH,MAJe;AAKxBI,EAAAA,SAAS,EAACC,KALc;AAMxBC,EAAAA,SAAS,EAACD,KANc;AAOxBE,EAAAA,MAAM,EAACF,KAPiB;AAQxBG,EAAAA,QAAQ,EAACH,KARe;AASxBI,EAAAA,KAAK,EAACJ,KATkB;AAUxBK,EAAAA,SAAS,EAACV;AAVc,CAAX,EAWf;AACEW,EAAAA,UAAU,EAAC;AADb,CAXe,CAAjB;AAgBAb,UAAU,CAACc,GAAX,CAAe,MAAf,EAAsB,UAASC,IAAT,EAAc;AAChC,MAAMC,OAAO,GAAC,IAAd;;AACA,MAAG,CAACA,OAAO,CAACC,UAAR,CAAmB,UAAnB,CAAJ,EAAmC;AAC/B,WAAOF,IAAI,EAAX;AACH;;AAEDG,2BAAOC,OAAP,CAAe,EAAf,EAAkB,UAACC,GAAD,EAAKC,IAAL,EAAY;AAC1B,QAAGD,GAAH,EAAQL,IAAI,CAACK,GAAD,CAAJ;;AAERF,6BAAOI,IAAP,CAAYN,OAAO,CAACX,QAApB,EAA6BgB,IAA7B,EAAkC,IAAlC,EAAuC,UAACD,GAAD,EAAKE,IAAL,EAAY;AAC/C,UAAGF,GAAH,EAAQL,IAAI,CAACK,GAAD,CAAJ;AAERJ,MAAAA,OAAO,CAACX,QAAR,GAAiBiB,IAAjB;AACAP,MAAAA,IAAI;AACP,KALD;AAMH,GATD;AAUH,CAhBD;;AAkBAf,UAAU,CAACuB,OAAX,CAAmBC,gBAAnB,GAAoC,UAASnB,QAAT,EAAkBoB,EAAlB,EAAqB;AACrDP,2BAAOQ,OAAP,CAAerB,QAAf,EAAwB,KAAKA,QAA7B,EAAsC,UAACe,GAAD,EAAKO,MAAL,EAAc;AAChD,QAAGP,GAAH,EAAQ,OAAOK,EAAE,CAACL,GAAD,CAAT;AAERK,IAAAA,EAAE,CAAC,IAAD,EAAME,MAAN,CAAF;AACH,GAJD;AAOH,CARD;;AAUA,IAAMC,KAAK,GAAC7B,qBAAS6B,KAAT,CAAe,MAAf,EAAsB5B,UAAtB,CAAZ;;eAEe4B,K","sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcrypt-nodejs';\r\n\r\nconst Schema=mongoose.Schema;\r\n\r\nconst userSchema=new Schema({\r\n    name:String,\r\n    userName:String,\r\n    email:String,\r\n    password:String,\r\n    followers:Array,\r\n    following:Array,\r\n    tweets:Array,\r\n    retweets:Array,\r\n    liked:Array,\r\n    userPhoto:String\r\n},{\r\n    timestamps:true\r\n}\r\n);\r\n\r\nuserSchema.pre('save',function(next){\r\n    const usuario=this;\r\n    if(!usuario.isModified('password')){\r\n        return next();\r\n    }\r\n\r\n    bcrypt.genSalt(10,(err,salt)=>{\r\n        if(err) next(err);\r\n\r\n        bcrypt.hash(usuario.password,salt,null,(err,hash)=>{\r\n            if(err) next(err);\r\n\r\n            usuario.password=hash;\r\n            next();\r\n        });    \r\n    })\r\n});\r\n\r\nuserSchema.methods.compararPassword=function(password,cb){\r\n    bcrypt.compare(password,this.password,(err,isTrue)=>{\r\n        if(err) return cb(err);\r\n\r\n        cb(null,isTrue);\r\n    }\r\n    \r\n    );\r\n}\r\n\r\nconst model=mongoose.model('User',userSchema);\r\n\r\nexport default model;"],"file":"User.js"}