{"version":3,"sources":["../../src/controllers/userController.js"],"names":["postSignup","req","res","next","body","name","email","password","userName","Math","round","random","User","findOne","user","usuario","followers","tweets","following","retweets","liked","userPhoto","err","status","send","message","save","logIn","postLogin","passport","authenticate","info","logout","getUserData","_id","findById","select","error"],"mappings":"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","sourcesContent":["import passport from 'passport';\r\nimport User from '../models/User';\r\nimport regeneratorRuntime from \"regenerator-runtime\";\r\n\r\nexport const postSignup= async(req,res,next)=>{\r\n    \r\n    const {name,email,password}=req.body;\r\n    let userName='';\r\n    while(userName===''){\r\n        userName=`${name}${10000+Math.round(Math.random()*500000)}`\r\n        const user=await User.findOne({userName});\r\n        if(user) userName='';\r\n    }\r\n    const usuario=new User({\r\n        name,\r\n        userName:userName,\r\n        email:email,\r\n        password:password,\r\n        followers:[],\r\n        tweets:[],\r\n        following:[],\r\n        retweets:[],\r\n        liked:[],\r\n        userPhoto:''\r\n    });\r\n    User.findOne({email},(err,user)=>{\r\n        if(err) return res.status(400).send({message:'Problema al crear al usuario'});\r\n        \r\n        if(user){\r\n            return res.status(200).send({message:'Este email ya esta en uso'});\r\n        }else{\r\n            usuario.save((err)=>{\r\n                if(err) next(err);\r\n        \r\n                req.logIn(usuario,(err)=>{\r\n                    if(err) next(err);\r\n        \r\n                    res.send('Usuario creado exitosamente');\r\n                })\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const postLogin=(req,res,next)=>{\r\n    passport.authenticate('local',(err,user,info)=>{\r\n        if(err) next(err);\r\n\r\n        if(!user){\r\n            return res.status(400).send({message:'Email o contraseÃ±a no validos'});\r\n        }\r\n        req.logIn(user,(err)=>{\r\n            if(err) next(err);\r\n\r\n            res.send({message:'Login Exitoso'});\r\n        })\r\n    })(req,res,next);\r\n}\r\n\r\nexport const logout=(req,res)=>{\r\n    req.logout();\r\n    res.send({message:'Logout Exitoso'});\r\n}\r\n\r\nexport const getUserData= async(req,res)=>{\r\n    const {_id}=req.user\r\n    try{\r\n        const user=await User.findById(_id).select('name userName userPhoto')\r\n        return res.status(200).send({user})\r\n    }catch(error){\r\n        return res.status(400).send({error})\r\n    }\r\n\r\n}"],"file":"userController.js"}